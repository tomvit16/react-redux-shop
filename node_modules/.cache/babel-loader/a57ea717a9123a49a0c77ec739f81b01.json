{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\re-store\\\\src\\\\components\\\\book-list\\\\book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { booksLoaded } from '../../actions';\nimport { withBookstoreService } from '../hoc';\nimport { compose } from '../../utils';\nimport './book-list.css';\n\nclass BookList extends Component {\n  componentDidMount() {\n    const bookstoreService = this.props.bookstoreService;\n    const data = bookstoreService.getBooks();\n    console.log(data);\n  }\n\n  render() {\n    const books = this.props.books;\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, books.map(book => {\n      return React.createElement(\"li\", {\n        key: book.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(BookListItem, {\n        book: book,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    booksLoaded\n  }, dispatch);\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["D:/Projects/re-store/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","bindActionCreators","connect","booksLoaded","withBookstoreService","compose","BookList","componentDidMount","bookstoreService","props","data","getBooks","console","log","render","books","map","book","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,oBAAT,QAAqC,QAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,iBAAP;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAG7BQ,EAAAA,iBAAiB,GAAG;AAAA,UACRC,gBADQ,GACa,KAAKC,KADlB,CACRD,gBADQ;AAEhB,UAAME,IAAI,GAAGF,gBAAgB,CAACG,QAAjB,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH;;AAGDI,EAAAA,MAAM,GAAI;AAAA,UACEC,KADF,GACY,KAAKN,KADjB,CACEM,KADF;AAEN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAChB,aACI;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,CADJ;AAGH,KAJD,CAFL,CADJ;AAYH;;AAxB4B;;AA2BjC,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,KAAK,EAAEK,KAAK,CAACL;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMM,kBAAkB,GAAKC,QAAF,IAAe;AACtC,SAAOrB,kBAAkB,CAAC;AACtBE,IAAAA;AADsB,GAAD,EAEtBmB,QAFsB,CAAzB;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAClBD,oBAAoB,EADF,EAElBF,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAFW,CAAP,CAGbf,QAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport BookListItem from '../book-list-item';\r\nimport { bindActionCreators } from 'redux'; \r\nimport { connect } from 'react-redux';\r\n\r\nimport { booksLoaded } from '../../actions';\r\nimport { withBookstoreService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport './book-list.css';\r\n\r\nclass BookList extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        const { bookstoreService } = this.props;\r\n        const data = bookstoreService.getBooks();\r\n        console.log(data)\r\n    }\r\n\r\n\r\n    render () {\r\n        const { books } = this.props;\r\n        return (\r\n            <ul>\r\n             {\r\n                 books.map((book) => {\r\n                     return (\r\n                         <li key={book.id}><BookListItem book={book} /></li>\r\n                     )\r\n                 })\r\n             }\r\n            \r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.books\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = ( dispatch) => {\r\n    return bindActionCreators({\r\n        booksLoaded\r\n    }, dispatch);\r\n}\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookList);\r\n\r\n"]},"metadata":{},"sourceType":"module"}