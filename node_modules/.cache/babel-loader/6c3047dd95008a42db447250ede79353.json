{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\re-store\\\\src\\\\components\\\\book-list\\\\book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Spinner from '../spinner';\nimport { fetchBooks } from '../../actions';\nimport { withBookstoreService } from '../hoc';\nimport { compose } from '../../utils';\nimport './book-list.css';\nimport ErrorIndicator from '../error-indicator';\n\nconst BookList = ({\n  books\n}) => {\n  return React.createElement(\"ul\", {\n    className: \"book-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, books.map(book => {\n    return React.createElement(\"li\", {\n      key: book.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(BookListItem, {\n      book: book,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }));\n};\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const _this$props = this.props,\n          books = _this$props.books,\n          loading = _this$props.loading,\n          error = _this$props.error;\n\n    if (loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }\n\n    if (error) {\n      return React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(BookList, {\n      books: books,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = (dispatch, {\n  bookstoreService\n}) => {\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch)\n  };\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookListContainer);","map":{"version":3,"sources":["D:/Projects/re-store/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","bindActionCreators","connect","Spinner","fetchBooks","withBookstoreService","compose","ErrorIndicator","BookList","books","map","book","id","BookListContainer","componentDidMount","props","render","loading","error","mapStateToProps","state","mapDispatchToProps","dispatch","bookstoreService"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,oBAAT,QAAqC,QAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,iBAAP;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC5B,SACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAChB,WACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,CADJ;AAGH,GAJD,CAFL,CADJ;AAYH,CAbD;;AAeA,MAAME,iBAAN,SAAgCd,SAAhC,CAA0C;AAGtCe,EAAAA,iBAAiB,GAAG;AACZ,SAAKC,KAAL,CAAWX,UAAX;AAEP;;AAGDY,EAAAA,MAAM,GAAI;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACEN,KADF,eACEA,KADF;AAAA,UACSQ,OADT,eACSA,OADT;AAAA,UACkBC,KADlB,eACkBA,KADlB;;AAGN,QAAID,OAAJ,EAAa;AACT,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,QAAIC,KAAJ,EAAW;AACP,aAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WAAO,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH;;AArBqC;;AA0B1C,MAAMU,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHX,IAAAA,KAAK,EAAEW,KAAK,CAACX,KADV;AAEHQ,IAAAA,OAAO,EAAEG,KAAK,CAACH,OAFZ;AAGHC,IAAAA,KAAK,EAAEE,KAAK,CAACF;AAHV,GAAP;AAKH,CAND;;AAQA,MAAMG,kBAAkB,GAAG,CAAEC,QAAF,EAAY;AAAEC,EAAAA;AAAF,CAAZ,KAAqC;AAC5D,SAAO;AACHnB,IAAAA,UAAU,EAAEA,UAAU,CAACmB,gBAAD,EAAmBD,QAAnB;AADnB,GAAP;AAGH,CAJD;;AAMA,eAAehB,OAAO,CAClBD,oBAAoB,EADF,EAElBH,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAFW,CAAP,CAGbR,iBAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport BookListItem from '../book-list-item';\r\nimport { bindActionCreators } from 'redux'; \r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../spinner';\r\nimport { fetchBooks } from '../../actions';\r\nimport { withBookstoreService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport './book-list.css';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nconst BookList = ({ books }) => {\r\n    return (\r\n        <ul className=\"book-list\">\r\n         {\r\n             books.map((book) => {\r\n                 return (\r\n                     <li key={book.id}><BookListItem book={book} /></li>\r\n                 )\r\n             })\r\n         }\r\n        \r\n        </ul>\r\n    )\r\n}\r\n\r\nclass BookListContainer extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n            this.props.fetchBooks();\r\n       \r\n    }\r\n\r\n\r\n    render () {\r\n        const { books, loading, error } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />;\r\n        }\r\n        return <BookList books={books} />\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.books,\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = ( dispatch, { bookstoreService }) => {\r\n    return {\r\n        fetchBooks: fetchBooks(bookstoreService, dispatch)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}