{"ast":null,"code":"import _defineProperty from \"D:\\\\Projects\\\\re-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 0,\n  itemsTotal: 0\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n  if (item.count === 0) {\n    return [...cartItems.slice(0, idx), ...cartItems.slice(idx + 1)];\n  }\n\n  if (item.count === -1) {\n    return [...cartItems, item];\n  }\n\n  ;\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\n};\n\nconst updateOrderTotal = (state, book, quantity, itemIndex) => {\n  const orderTotal = state.orderTotal,\n        cartItems = state.cartItems;\n\n  if (quantity === 1) {\n    const result = orderTotal + book.price;\n    return result;\n  }\n\n  if (quantity === -1) {\n    const result = orderTotal - book.price;\n    return result;\n  }\n\n  if (quantity < -1) {\n    const result = orderTotal - cartItems[itemIndex].total;\n    return result;\n  }\n};\n\nconst updateItemsTotal = (state, quantity, itemIndex) => {\n  const itemsTotal = state.itemsTotal,\n        cartItems = state.cartItems;\n  console.log(cartItems);\n\n  if (quantity === 1) {\n    const result = itemsTotal + quantity;\n    return result;\n  }\n\n  if (quantity === -1) {\n    const result = itemsTotal + quantity;\n    return result;\n  }\n\n  if (quantity < -1) {\n    const result = itemsTotal - cartItems[itemIndex].count;\n    return result;\n  }\n};\n\nconst updateCartItem = (book, item = {}, quantity) => {\n  const _item$id = item.id,\n        id = _item$id === void 0 ? book.id : _item$id,\n        _item$count = item.count,\n        count = _item$count === void 0 ? 0 : _item$count,\n        _item$title = item.title,\n        title = _item$title === void 0 ? book.title : _item$title,\n        _item$total = item.total,\n        total = _item$total === void 0 ? 0 : _item$total;\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity * book.price\n  };\n};\n\nconst updateOrder = (state, bookId, quantity) => {\n  const books = state.books,\n        cartItems = state.cartItems;\n  const book = books.find(book => book.id === bookId);\n  const itemIndex = cartItems.findIndex(({\n    id\n  }) => id === bookId);\n  const item = cartItems[itemIndex];\n  const newItem = updateCartItem(book, item, quantity);\n  return _objectSpread({}, state, {\n    cartItems: updateCartItems(state.cartItems, newItem, itemIndex),\n    orderTotal: updateOrderTotal(state, book, quantity, itemIndex),\n    itemsTotal: updateItemsTotal(state, quantity, itemIndex)\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      return updateOrder(state, action.payload, 1);\n\n    case 'BOOK_REMOVED_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n      const item = state.cartItems.find(({\n        id\n      }) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n\n    default:\n      return state;\n\n    case 'FETCH_BOOKS_REQUESTED':\n      return _objectSpread({}, state, {\n        books: [],\n        loading: true,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return _objectSpread({}, state, {\n        books: action.payload,\n        loading: false,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_FAILURE':\n      return _objectSpread({}, state, {\n        books: [],\n        loading: false,\n        error: action.payload\n      });\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Projects/re-store/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","itemsTotal","updateCartItems","item","idx","count","slice","updateOrderTotal","state","book","quantity","itemIndex","result","price","total","updateItemsTotal","console","log","updateCartItem","id","title","updateOrder","bookId","find","findIndex","newItem","reducer","action","type","payload"],"mappings":"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","sourcesContent":["\r\nconst initialState = {\r\n        books: [],\r\n        loading: true,\r\n        error: null,\r\n        cartItems: [],\r\n        orderTotal: 0,\r\n        itemsTotal: 0\r\n};\r\n\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n\r\n    if (item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    if (item.count === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ];\r\n    };\r\n\r\n    return [\r\n        ...cartItems.slice(0, idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1)\r\n    ];\r\n};\r\n\r\nconst updateOrderTotal = (state, book, quantity, itemIndex) => {\r\n    const {orderTotal, cartItems} = state;\r\n\r\n    if (quantity === 1) {\r\n        const result = orderTotal + book.price;\r\n        return result;\r\n    }\r\n\r\n    if (quantity === -1) {\r\n        const result = orderTotal - book.price;\r\n        return result;\r\n    }\r\n\r\n    if (quantity < -1) {\r\n        const result = orderTotal - cartItems[itemIndex].total;\r\n        return result;\r\n    }        \r\n    \r\n};\r\n\r\nconst updateItemsTotal = (state, quantity, itemIndex) => {\r\n    const {itemsTotal, cartItems} = state;\r\n\r\n    console.log(cartItems);\r\n\r\n    if (quantity === 1) {\r\n        const result = itemsTotal + quantity;\r\n        return result;\r\n    }\r\n\r\n    if (quantity === -1) {\r\n        const result = itemsTotal + quantity;\r\n        return result;\r\n    }\r\n\r\n    if (quantity < -1) {\r\n        const result = itemsTotal - cartItems[itemIndex].count;\r\n        return result;\r\n    }  \r\n}\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n    const { id = book.id, count = 0, title = book.title, total = 0 } = item;\r\n\r\n  return {\r\n      id,\r\n      title,\r\n      count: count + quantity,\r\n      total: total + quantity*book.price\r\n  };\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const {  books,  cartItems } = state;\r\n    const book = books.find((book) => book.id === bookId);\r\n    const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n    const item = cartItems[itemIndex];\r\n    const newItem = updateCartItem(book, item, quantity);  \r\n\r\n        return {\r\n           \r\n            ...state,\r\n            cartItems: updateCartItems(state.cartItems, newItem, itemIndex),\r\n            orderTotal: updateOrderTotal(state, book, quantity, itemIndex),\r\n            itemsTotal: updateItemsTotal(state, quantity, itemIndex)\r\n        };\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n\r\n        case 'BOOK_REMOVED_FROM_CART':\r\n                return updateOrder(state, action.payload, -1);\r\n\r\n        case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n            const item = state.cartItems.find(({id}) => id === action.payload);\r\n            return updateOrder(state, action.payload, -item.count);\r\n            default:\r\n                    return state;   \r\n\r\n        case 'FETCH_BOOKS_REQUESTED':\r\n                            return {\r\n                                ...state,\r\n                                books: [],\r\n                                loading: true,\r\n                                error: null\r\n                \r\n                            };\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n                            return {\r\n                                ...state,\r\n                                books: action.payload,\r\n                                loading: false,\r\n                                error: null\r\n                            };\r\n        case 'FETCH_BOOKS_FAILURE':\r\n                            return {\r\n                                ...state,\r\n                                books: [],\r\n                                loading: false,\r\n                                error: action.payload\r\n                            };\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}