{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\re-store\\\\src\\\\components\\\\book-list\\\\book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Spinner from '../spinner';\nimport { booksLoaded } from '../../actions';\nimport { withBookstoreService } from '../hoc';\nimport { compose } from '../../utils';\nimport './book-list.css';\n\nclass BookList extends Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          bookstoreService = _this$props.bookstoreService,\n          booksLoaded = _this$props.booksLoaded;\n    bookstoreService.getBooks().then(data => booksLoaded(data));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          books = _this$props2.books,\n          loading = _this$props2.loading;\n\n    if (loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"ul\", {\n      className: \"book-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, books.map(book => {\n      return React.createElement(\"li\", {\n        key: book.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(BookListItem, {\n        book: book,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }));\n  }\n\n} // const mapStateToProps = (state) => {\n//     return {\n//         books: state.books,\n//         loading: state.loading\n//     }\n// };\n\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    booksLoaded\n  }, dispatch);\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["D:/Projects/re-store/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","bindActionCreators","connect","Spinner","booksLoaded","withBookstoreService","compose","BookList","componentDidMount","props","bookstoreService","getBooks","then","data","render","books","loading","map","book","id","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,oBAAT,QAAqC,QAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,iBAAP;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAG7BS,EAAAA,iBAAiB,GAAG;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACRC,gBADQ,eACRA,gBADQ;AAAA,UACUN,WADV,eACUA,WADV;AAEhBM,IAAAA,gBAAgB,CAACC,QAAjB,GACKC,IADL,CACWC,IAAD,IAAUT,WAAW,CAACS,IAAD,CAD/B;AAIH;;AAGDC,EAAAA,MAAM,GAAI;AAAA,yBACqB,KAAKL,KAD1B;AAAA,UACEM,KADF,gBACEA,KADF;AAAA,UACSC,OADT,gBACSA,OADT;;AAGN,QAAIA,OAAJ,EAAa;AACT,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AAChB,aACI;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,CADJ;AAGH,KAJD,CAFL,CADJ;AAYH;;AA/B4B,C,CAkCjC;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,kBAAkB,GAAKC,QAAF,IAAe;AACtC,SAAOpB,kBAAkB,CAAC;AACtBG,IAAAA;AADsB,GAAD,EAEtBiB,QAFsB,CAAzB;AAGH,CAJD;;AAMA,eAAef,OAAO,CAClBD,oBAAoB,EADF,EAElBH,OAAO,CAACoB,eAAD,EAAkBF,kBAAlB,CAFW,CAAP,CAGbb,QAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport BookListItem from '../book-list-item';\r\nimport { bindActionCreators } from 'redux'; \r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../spinner';\r\nimport { booksLoaded } from '../../actions';\r\nimport { withBookstoreService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport './book-list.css';\r\n\r\nclass BookList extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        const { bookstoreService, booksLoaded } = this.props;\r\n        bookstoreService.getBooks()\r\n            .then((data) => booksLoaded(data));\r\n            \r\n       \r\n    }\r\n\r\n\r\n    render () {\r\n        const { books, loading } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        return (\r\n            <ul className=\"book-list\">\r\n             {\r\n                 books.map((book) => {\r\n                     return (\r\n                         <li key={book.id}><BookListItem book={book} /></li>\r\n                     )\r\n                 })\r\n             }\r\n            \r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         books: state.books,\r\n//         loading: state.loading\r\n//     }\r\n// };\r\n\r\nconst mapDispatchToProps = ( dispatch) => {\r\n    return bindActionCreators({\r\n        booksLoaded\r\n    }, dispatch);\r\n}\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookList);\r\n\r\n"]},"metadata":{},"sourceType":"module"}